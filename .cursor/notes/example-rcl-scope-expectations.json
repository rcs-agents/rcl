{
  "description": "Expected TextMate scopes for segments in examples/example.rcl",
  "fileStructure": {
    "imports": [
      {
        "text": "import",
        "expectedScope": "keyword.control.import.rcl",
        "line": 1
      },
      {
        "text": "My Brand",
        "expectedScope": "entity.name.namespace.rcl",
        "line": 1
      },
      {
        "text": "/",
        "expectedScope": "punctuation.separator.namespace.rcl",
        "line": 1
      },
      {
        "text": "Samples.one",
        "expectedScope": "entity.name.module.rcl",
        "line": 1
      },
      {
        "text": "as",
        "expectedScope": "keyword.control.import.as.rcl",
        "line": 1
      },
      {
        "text": "Sample One",
        "expectedScope": "entity.name.alias.rcl",
        "line": 1
      }
    ],
    "agentSection": [
      {
        "text": "agent",
        "expectedScope": "keyword.control.section.agent.rcl",
        "line": 4
      },
      {
        "text": "My Brand",
        "expectedScope": "entity.name.section.agent.rcl",
        "line": 4
      },
      {
        "text": "brandName",
        "expectedScope": "variable.other.property.rcl",
        "line": 5
      },
      {
        "text": ":",
        "expectedScope": "punctuation.separator.key-value.rcl",
        "line": 5
      },
      {
        "text": "Sample Brand",
        "expectedScope": "string.quoted.double.rcl",
        "line": 5
      },
      {
        "text": "displayName",
        "expectedScope": "variable.other.property.rcl",
        "line": 6
      },
      {
        "text": "Sample Agent",
        "expectedScope": "string.quoted.double.rcl",
        "line": 6
      }
    ],
    "configSection": [
      {
        "text": "Config",
        "expectedScope": "keyword.control.section.config.rcl",
        "line": 8
      },
      {
        "text": "description",
        "expectedScope": "variable.other.property.rcl",
        "line": 9
      },
      {
        "text": "Agent description",
        "expectedScope": "string.quoted.double.rcl",
        "line": 9
      },
      {
        "text": "logoUri",
        "expectedScope": "variable.other.property.rcl",
        "line": 10
      },
      {
        "text": "https://www.example.com/logo.png",
        "expectedScope": "string.quoted.double.rcl",
        "line": 10
      },
      {
        "text": "color",
        "expectedScope": "variable.other.property.rcl",
        "line": 12
      },
      {
        "text": "#123456",
        "expectedScope": "string.quoted.double.rcl",
        "line": 12
      },
      {
        "text": "agentUseCase",
        "expectedScope": "variable.other.property.rcl",
        "line": 13
      },
      {
        "text": ":TRANSACTIONAL",
        "expectedScope": "constant.other.atom.rcl",
        "line": 13
      },
      {
        "text": "hostingRegion",
        "expectedScope": "variable.other.property.rcl",
        "line": 14
      },
      {
        "text": ":NORTH_AMERICA",
        "expectedScope": "constant.other.atom.rcl",
        "line": 14
      }
    ],
    "defaultsSection": [
      {
        "text": "Defaults",
        "expectedScope": "keyword.control.section.defaults.rcl",
        "line": 16
      },
      {
        "text": "messageTrafficType",
        "expectedScope": "variable.other.property.rcl",
        "line": 17
      },
      {
        "text": ":TRANSACTION",
        "expectedScope": "constant.other.atom.rcl",
        "line": 17
      },
      {
        "text": "fallback_message",
        "expectedScope": "variable.other.property.rcl",
        "line": 18
      },
      {
        "text": "I didn't understand that. Let me connect you with support.",
        "expectedScope": "string.quoted.double.rcl",
        "line": 18
      },
      {
        "text": "ttl",
        "expectedScope": "variable.other.property.rcl",
        "line": 19
      },
      {
        "text": "PT1H",
        "expectedScope": "string.quoted.double.rcl",
        "line": 19
      },
      {
        "text": "expressions",
        "expectedScope": "variable.other.property.rcl",
        "line": 20
      },
      {
        "text": "language",
        "expectedScope": "variable.other.property.rcl",
        "line": 21
      },
      {
        "text": ":rclscript",
        "expectedScope": "constant.other.atom.rcl",
        "line": 21
      },
      {
        "text": "postbackData",
        "expectedScope": "variable.other.property.rcl",
        "line": 22
      },
      {
        "text": "$js>",
        "expectedScope": "keyword.control.embedded.marker.js.rcl",
        "line": 22
      }
    ],
    "flowSection": [
      {
        "text": "flow",
        "expectedScope": "keyword.control.section.flow.rcl",
        "line": 24
      },
      {
        "text": "Default",
        "expectedScope": "entity.name.section.flow.rcl",
        "line": 24
      },
      {
        "text": ":start",
        "expectedScope": "constant.other.atom.rcl",
        "line": 25
      },
      {
        "text": "->",
        "expectedScope": "keyword.operator.flow.arrow.rcl",
        "line": 25
      },
      {
        "text": "Welcome",
        "expectedScope": "variable.other.flow.target.rcl",
        "line": 25
      },
      {
        "text": ":error",
        "expectedScope": "constant.other.atom.rcl",
        "line": 26
      },
      {
        "text": "Error Message",
        "expectedScope": "variable.other.flow.target.rcl",
        "line": 26
      },
      {
        "text": "when",
        "expectedScope": "keyword.control.flow.rcl",
        "line": 28
      },
      {
        "text": "Tell me more",
        "expectedScope": "string.quoted.double.rcl",
        "line": 29
      },
      {
        "text": "Check Status",
        "expectedScope": "variable.other.flow.target.rcl",
        "line": 29
      }
    ],
    "messagesSection": [
      {
        "text": "Messages",
        "expectedScope": "keyword.control.section.messages.rcl",
        "line": 50
      },
      {
        "text": "message",
        "expectedScope": "keyword.control.section.message.rcl",
        "line": 51
      },
      {
        "text": "Welcome",
        "expectedScope": "entity.name.section.message.rcl",
        "line": 51
      },
      {
        "text": "text",
        "expectedScope": "variable.other.property.rcl",
        "line": 52
      },
      {
        "text": "Hello! This is a transactional message with various suggestions. How can I help you today?",
        "expectedScope": "string.quoted.double.rcl",
        "line": 52
      },
      {
        "text": "suggestions",
        "expectedScope": "variable.other.property.rcl",
        "line": 53
      },
      {
        "text": "reply",
        "expectedScope": "keyword.control.suggestion.reply.rcl",
        "line": 54
      },
      {
        "text": "Tell me more",
        "expectedScope": "string.quoted.double.rcl",
        "line": 54
      },
      {
        "text": "dialAction",
        "expectedScope": "keyword.control.action.dial.rcl",
        "line": 55
      },
      {
        "text": "Call Us",
        "expectedScope": "string.quoted.double.rcl",
        "line": 55
      },
      {
        "text": "+1234567890",
        "expectedScope": "string.quoted.double.rcl",
        "line": 55
      },
      {
        "text": "shareLocation",
        "expectedScope": "keyword.control.action.rcl",
        "line": 58
      },
      {
        "text": "Share Location",
        "expectedScope": "string.quoted.double.rcl",
        "line": 58
      }
    ],
    "agentMessageSection": [
      {
        "text": "agentMessage",
        "expectedScope": "keyword.control.section.agentmessage.rcl",
        "line": 60
      },
      {
        "text": "Welcome Full",
        "expectedScope": "entity.name.section.agentmessage.rcl",
        "line": 60
      },
      {
        "text": "messageTrafficType",
        "expectedScope": "variable.other.property.rcl",
        "line": 61
      },
      {
        "text": ":TRANSACTION",
        "expectedScope": "constant.other.atom.rcl",
        "line": 61
      },
      {
        "text": "expireTime",
        "expectedScope": "variable.other.property.rcl",
        "line": 62
      },
      {
        "text": "2024-12-31T23:59:59Z",
        "expectedScope": "string.quoted.double.rcl",
        "line": 62
      },
      {
        "text": "contentMessage",
        "expectedScope": "variable.other.property.rcl",
        "line": 64
      }
    ],
    "booleanValues": [
      {
        "text": "True",
        "expectedScope": "constant.language.boolean.rcl"
      },
      {
        "text": "False",
        "expectedScope": "constant.language.boolean.rcl"
      }
    ],
    "numericValues": [
      {
        "text": "42",
        "expectedScope": "constant.numeric.integer.rcl"
      },
      {
        "text": "37.7749",
        "expectedScope": "constant.numeric.float.rcl"
      },
      {
        "text": "-122.4194",
        "expectedScope": "constant.numeric.float.rcl"
      }
    ],
    "timeValues": [
      {
        "text": "10:00",
        "expectedScope": "constant.numeric.time.rcl"
      },
      {
        "text": "11:00",
        "expectedScope": "constant.numeric.time.rcl"
      },
      {
        "text": "12:00",
        "expectedScope": "constant.numeric.time.rcl"
      }
    ],
    "dateTimeValues": [
      {
        "text": "2024-12-31T23:59:59Z",
        "expectedScope": "constant.other.datetime.rcl"
      },
      {
        "text": "2025-01-15T10:00:00Z",
        "expectedScope": "constant.other.datetime.rcl"
      },
      {
        "text": "2025-01-15T11:00:00Z",
        "expectedScope": "constant.other.datetime.rcl"
      }
    ]
  },
  "commonIssues": [
    {
      "issue": "Agent name with spaces not tokenizing correctly",
      "example": "agent My Brand",
      "expectedBehavior": "Should split into 'agent' (keyword) and 'My Brand' (entity name)"
    },
    {
      "issue": "Import statements with spaces in namespace/alias not parsing",
      "example": "import My Brand / Samples.one as Sample One",
      "expectedBehavior": "Should recognize 'My Brand' as namespace and 'Sample One' as alias"
    },
    {
      "issue": "Atom values like :TRANSACTIONAL not being recognized",
      "example": "agentUseCase: :TRANSACTIONAL",
      "expectedBehavior": "':TRANSACTIONAL' should be scoped as constant.other.atom.rcl"
    },
    {
      "issue": "Embedded expressions not being recognized",
      "example": "$js> format @selectedOption.text as :dash_case",
      "expectedBehavior": "'$js>' should trigger JavaScript highlighting"
    },
    {
      "issue": "Flow rules with atoms not parsing correctly",
      "example": ":start -> Welcome",
      "expectedBehavior": "':start' should be atom, '->' should be flow arrow, 'Welcome' should be target"
    },
    {
      "issue": "agentMessage not being recognized as keyword",
      "example": "agentMessage Welcome Full",
      "expectedBehavior": "'agentMessage' should be keyword, 'Welcome Full' should be entity name"
    }
  ]
} 