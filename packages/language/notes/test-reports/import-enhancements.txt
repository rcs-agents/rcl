bun test v1.2.18 (0d4089ea)

tests/grammar/import-enhancements.test.ts:
(pass) RCL Import Statement Enhancements > Basic Import Statements (Already Working) > should parse simple import statements [4.00ms]
(pass) RCL Import Statement Enhancements > Basic Import Statements (Already Working) > should parse import statements with aliases [1.00ms]
65 |     it('should parse namespace imports with spaces in names', () => {
66 |       const input = `import My Brand / Samples as Sample One`;
67 | 
68 |       const result = parser.parse(input);
69 | 
70 |       expect(result.errors).toHaveLength(0);
                                 ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:70:29)
(fail) RCL Import Statement Enhancements > Namespace Imports with Spaces > should parse namespace imports with spaces in names
78 |     it('should parse multi-level namespace paths', () => {
79 |       const input = `import Shared / Common Flows / Support`;
80 | 
81 |       const result = parser.parse(input);
82 | 
83 |       expect(result.errors).toHaveLength(0);
                                 ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:83:29)
(fail) RCL Import Statement Enhancements > Namespace Imports with Spaces > should parse multi-level namespace paths
90 |     it('should parse complex namespace with spaces and alias', () => {
91 |       const input = `import Premium Customer / Support Flows as Customer Support`;
92 | 
93 |       const result = parser.parse(input);
94 | 
95 |       expect(result.errors).toHaveLength(0);
                                 ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:95:29)
(fail) RCL Import Statement Enhancements > Namespace Imports with Spaces > should parse complex namespace with spaces and alias [1.00ms]
104 |     it('should handle namespace paths without alias', () => {
105 |       const input = `import Brand / Agent Templates`;
106 | 
107 |       const result = parser.parse(input);
108 | 
109 |       expect(result.errors).toHaveLength(0);
                                  ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:109:29)
(fail) RCL Import Statement Enhancements > Edge Cases and Error Handling > should handle namespace paths without alias
116 |     it('should handle single namespace with spaces', () => {
117 |       const input = `import Premium Support as Support`;
118 | 
119 |       const result = parser.parse(input);
120 | 
121 |       expect(result.errors).toHaveLength(0);
                                  ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:121:29)
(fail) RCL Import Statement Enhancements > Edge Cases and Error Handling > should handle single namespace with spaces
128 |     it('should handle imports without source', () => {
129 |       const input = `import Local Utils / Helpers`;
130 | 
131 |       const result = parser.parse(input);
132 | 
133 |       expect(result.errors).toHaveLength(0);
                                  ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:133:29)
(fail) RCL Import Statement Enhancements > Edge Cases and Error Handling > should handle imports without source
144 | import My Brand / Samples as Samples
145 | import Local Helper`;
146 | 
147 |       const result = parser.parse(input);
148 | 
149 |       expect(result.errors).toHaveLength(0);
                                  ^
error: expect(received).toHaveLength(expected)

Expected length: 0
Received length: 1

      at <anonymous> (/home/ubuntu/rcl/packages/language/tests/grammar/import-enhancements.test.ts:149:29)
(fail) RCL Import Statement Enhancements > Mixed Import Statements > should parse multiple different import types
(pass) Import Resolution Logic > should resolve a simple file import (case-insensitive) [3.00ms]
(pass) Import Resolution Logic > should resolve a multi-level namespace to a file [1.00ms]
(pass) Import Resolution Logic > should resolve a section in a parent file [1.00ms]
(pass) Import Resolution Logic > should throw on ambiguity (multiple files) [1.00ms]
(pass) Import Resolution Logic > should throw if not found
(pass) Import Resolution Logic > should use project root detection [1.00ms]
(pass) Import Resolution Logic > should work in web environment with filesystem mock
(pass) Import Resolution Logic > should fallback gracefully when files dont exist in web environment

 10 pass
 7 fail
 27 expect() calls
Ran 17 tests across 1 file. [108.00ms]
