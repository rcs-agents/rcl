{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "rcl",
  "scopeName": "source.rcl",
  "fileTypes": [
    "rcl"
  ],
  "patterns": [
    {
      "include": "#import-statement"
    },
    {
      "include": "#section-keywords"
    },
    {
      "include": "#message-section-keywords"
    },
    {
      "include": "#reserved-section-names"
    },
    {
      "include": "#section"
    },
    {
      "include": "#sl-comment"
    }
  ],
  "repository": {
    "atom-literal": {
      "name": "constant.other.rcl.symbol",
      "match": " "
    },
    "attribute-access": {
      "name": "meta.path.rcl",
      "begin": " ",
      "beginCaptures": {
        "0": {
          "name": "punctuation.accessor.rcl"
        }
      },
      "end": "(?=\\s|[,)\\]}])",
      "patterns": [
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        }
      ]
    },
    "boolean-literal": {
      "name": "constant.language.rcl",
      "match": "( | )"
    },
    "common-noun": {
      "name": "variable.other.rcl",
      "match": " "
    },
    "embedded-code": {
      "name": "markup.raw.block.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.keyword.rcl"
        },
        "2": {
          "name": "entity.name.tag.rcl"
        }
      },
      "end": " ",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.keyword.rcl"
        }
      },
      "patterns": [
        {
          "include": "source.js"
        }
      ]
    },
    "explicit-map": {
      "name": "meta.braces.rcl",
      "begin": " ",
      "end": " ",
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        },
        {
          "include": "#indented-list"
        },
        {
          "include": "#explicit-map"
        },
        {
          "include": "#inline-list"
        },
        {
          "include": "#sl-comment"
        }
      ]
    },
    "flow-rule": {
      "name": "meta.block.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.rcl"
        },
        "2": {
          "name": "keyword.operator.logical.rcl"
        }
      },
      "end": " ",
      "patterns": [
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        }
      ]
    },
    "grouped-expression": {
      "name": "meta.group.rcl",
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        {
          "include": "#operators"
        },
        {
          "include": "#attribute-access"
        },
        {
          "include": "#grouped-expression"
        },
        {
          "include": "#single-line-expression"
        },
        {
          "include": "#multi-line-expression"
        },
        {
          "include": "#type-conversion"
        },
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        },
        {
          "include": "#sl-comment"
        },
        {
          "include": "#type-conversion"
        }
      ]
    },
    "import-alias": {
      "name": "variable.other.readwrite.rcl",
      "match": " "
    },
    "import-statement": {
      "name": "meta.block.rcl.import",
      "begin": " ",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.import.rcl"
        }
      },
      "end": "(?=\\n)",
      "patterns": [
        {
          "include": "#import-alias"
        },
        {
          "include": "#string-literal"
        }
      ]
    },
    "indented-list": {
      "name": "meta.block.rcl",
      "begin": " ",
      "end": "(?=\\n)",
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        },
        {
          "include": "#indented-list"
        },
        {
          "include": "#explicit-map"
        },
        {
          "include": "#inline-list"
        },
        {
          "include": "#sl-comment"
        }
      ]
    },
    "inline-list": {
      "name": "meta.brackets.rcl",
      "begin": " ",
      "end": " ",
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        },
        {
          "include": "#indented-list"
        },
        {
          "include": "#explicit-map"
        },
        {
          "include": "#inline-list"
        },
        {
          "include": "#sl-comment"
        }
      ]
    },
    "message-section-keywords": {
      "name": "storage.type.class.rcl",
      "match": " "
    },
    "multi-line-expression": {
      "name": "meta.interpolation.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "punctuation.section.interpolation.begin.rcl"
        }
      },
      "end": " ",
      "endCaptures": {
        "1": {
          "name": "punctuation.section.interpolation.end.rcl"
        }
      },
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        }
      ]
    },
    "multi-line-string": {
      "name": "string.quoted.rcl.multiline",
      "begin": "( | | | )",
      "end": " ",
      "patterns": []
    },
    "null-literal": {
      "name": "constant.language.rcl",
      "match": "Null"
    },
    "number-literal": {
      "name": "constant.numeric.rcl",
      "match": " "
    },
    "operators": {
      "name": "keyword.operator.rcl",
      "match": " "
    },
    "proper-noun": {
      "name": "entity.name.class.rcl",
      "match": " "
    },
    "reserved-section-names": {
      "name": "entity.name.class.rcl.predefined",
      "match": " "
    },
    "section": {
      "name": "meta.block.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "storage.type.class.rcl"
        },
        "2": {
          "name": "entity.name.class.rcl"
        },
        "3": {
          "name": "entity.name.class.rcl.predefined"
        }
      },
      "end": " ",
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        },
        {
          "include": "#indented-list"
        },
        {
          "include": "#explicit-map"
        },
        {
          "include": "#inline-list"
        },
        {
          "include": "#multi-line-string"
        },
        {
          "include": "#flow-rule"
        },
        {
          "include": "#sl-comment"
        },
        {
          "include": "#embedded-code"
        },
        {
          "include": "#type-conversion"
        },
        {
          "include": "#section-keywords"
        },
        {
          "include": "#message-section-keywords"
        },
        {
          "include": "#reserved-section-names"
        },
        {
          "include": "#section"
        }
      ]
    },
    "section-keywords": {
      "name": "meta.block.rcl",
      "match": " "
    },
    "single-line-expression": {
      "name": "meta.interpolation.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "punctuation.section.interpolation.begin.rcl"
        }
      },
      "end": " ",
      "endCaptures": {
        "1": {
          "name": "punctuation.section.interpolation.end.rcl"
        }
      },
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        }
      ]
    },
    "sl-comment": {
      "name": "comment.line.double-slash.rcl",
      "match": " "
    },
    "string-literal": {
      "name": "string.quoted.double.rcl",
      "match": " "
    },
    "type-conversion": {
      "name": "meta.type.rcl",
      "begin": " ",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.generic.begin.rcl"
        },
        "2": {
          "name": "storage.type.rcl"
        }
      },
      "end": ">",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.generic.end.rcl"
        }
      },
      "patterns": [
        {
          "include": "#string-literal"
        },
        {
          "include": "#number-literal"
        },
        {
          "include": "#boolean-literal"
        },
        {
          "include": "#null-literal"
        },
        {
          "include": "#atom-literal"
        },
        {
          "include": "#proper-noun"
        },
        {
          "include": "#common-noun"
        }
      ]
    }
  }
}